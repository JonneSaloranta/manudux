name: Release Django Project

on:
    push:
        branches:
            - master
    workflow_dispatch:
        inputs:
            prerelease_type:
                description: "Pre-release type (alpha, beta, rc)"
                required: true
                default: "alpha"

jobs:
    release:
        runs-on: ubuntu-latest
        environment: master_secrets
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Ensure all tags are fetched

            - name: Determine next pre-release version
              run: |
                  # Get the latest tag (or fallback to v0.0.0)
                  LATEST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
                  echo "Latest tag: $LATEST_TAG"

                  # Extract major, minor, patch numbers
                  MAJOR=$(echo "$LATEST_TAG" | cut -d'.' -f1 | tr -d 'v')
                  MINOR=$(echo "$LATEST_TAG" | cut -d'.' -f2)
                  PATCH=$(echo "$LATEST_TAG" | cut -d'.' -f3 | cut -d'-' -f1)
                  PRERELEASE_TYPE="${{ github.event.inputs.prerelease_type }}"

                  # Determine new pre-release number
                  if [[ "$LATEST_TAG" == *"$PRERELEASE_TYPE."* ]]; then
                      PRERELEASE_NUM=$(echo "$LATEST_TAG" | awk -F'.' '{print $NF}')
                      PRERELEASE_NUM=$((PRERELEASE_NUM + 1))
                  else
                      PRERELEASE_NUM=1
                  fi

                  # Generate new pre-release tag
                  NEW_TAG="v$MAJOR.$MINOR.$PATCH-$PRERELEASE_TYPE.$PRERELEASE_NUM"
                  echo "New tag: $NEW_TAG"

                  echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

            - name: Configure Git
              run: |
                  git config --global user.name "GitHub Actions"
                  git config --global user.email "github-actions@github.com"

            - name: Setup SSH for GitHub
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
                  chmod 600 ~/.ssh/id_ed25519
                  ssh-keyscan github.com >> ~/.ssh/known_hosts

            - name: Create and push Git tag
              run: |
                  git tag "$NEW_TAG"
                  git push git@github.com:${{ github.repository }}.git "$NEW_TAG"

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ env.NEW_TAG }}
                  prerelease: true
                  generate_release_notes: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
